---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: todo-application-deployment
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: todo-application
      app.kubernetes.io/instance: dev
      app.kubernetes.io/part-of: todo-application
      app.kubernetes.io/managed-by: github-actions
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: todo-application
        app.kubernetes.io/instance: dev
        app.kubernetes.io/part-of: todo-application
        app.kubernetes.io/managed-by: github-actions
        app.kubernetes.io/version: "${VERSION}"
        azure.workload.identity/use: "true"
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: todo-application
        image: ${DOCKER_REGISTRY}/application:${VERSION}
        volumeMounts:
        - name: todo-data
          mountPath: /app/data
        ports:
        - containerPort: 3000
          name: http-port
        resources:
          requests:
            memory: "64Mi"
            cpu: "30m"
          limits:
            memory: "128Mi"
            cpu: "40m"
        startupProbe:
          exec:
            command:
            - cat
            - /proc/1/status
          periodSeconds: 10
          failureThreshold: 30
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - ps
            - aux
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30
          successThreshold: 1
          timeoutSeconds: 35
        readinessProbe:
          exec:
            command:
            - ls
            - /app
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30
          successThreshold: 1
          timeoutSeconds: 5
        imagePullPolicy: Always
      volumes:
      - name: todo-data
        persistentVolumeClaim:
          claimName: todo-app-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: todo-app-pvc
  namespace: dev
  labels:
    app.kubernetes.io/name: todo-application
    app.kubernetes.io/instance: dev
    app.kubernetes.io/part-of: todo-application
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    volume.kubernetes.io/storage-class: ebs-sc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: todo-application-service
  namespace: dev
  labels:
    app.kubernetes.io/name: todo-application
    app.kubernetes.io/instance: dev
    app.kubernetes.io/part-of: todo-application
    app.kubernetes.io/managed-by: github-actions
    app.kubernetes.io/version: ${VERSION}
spec:
  type: ClusterIP
  ports:
  - port: 8080
    name: http
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/name: todo-application
    app.kubernetes.io/instance: dev
    app.kubernetes.io/part-of: todo-application
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: todo-application-gateway
  namespace: dev
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: todo-application-service-dr
  namespace: dev
spec:
  host: todo-application-service
  subsets:
    - labels:
        app.kubernetes.io/name: todo-application
        app.kubernetes.io/instance: dev
      name: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: todo-application-virtualservice
  namespace: dev
spec:
  hosts:
  - "*"
  gateways:
  - todo-application-gateway
  http:
  - route:
    - destination:
        host: todo-application-service
        subset: v1
        port:
          number: 8080
